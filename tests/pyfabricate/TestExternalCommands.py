
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from pyfabricate.oswrapper.ExternalCommands import ExternalCommands
from pyfabricate.oswrapper.ExternalCommands import SemanticVersions
from pyfabricate.oswrapper.ExternalCommands import UnableToRetrievePythonVersionsException


class TestExternalCommands(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 05 October 2024
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testGetPythonVersions(self):

        try:
            pythonVersions: SemanticVersions = ExternalCommands.getPythonVersions()

            self.assertTrue(len(pythonVersions) > 0, 'Must find at least one installed version')
        except UnableToRetrievePythonVersionsException as e:
            self.logger.error(f'{e.stderr}')


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestExternalCommands))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
